{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/AutoCompleteUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AutoComplete } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutoCompleteUI = () => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories').then(response => response.json()).then(data => {\n      setCategories(data);\n    }); // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  const filterOption = (inputValue, option) => {\n    console.log('option ', option);\n    return option.name.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n  };\n\n  const Complete = () => /*#__PURE__*/_jsxDEV(AutoComplete, {\n    style: {\n      width: 200\n    },\n    options: categories,\n    placeholder: \"try to type `b`\",\n    filterOption: filterOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  console.log('CATEGORIES  ', categories);\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this) : /*#__PURE__*/_jsxDEV(Complete, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AutoCompleteUI, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\n_c = AutoCompleteUI;\nexport default AutoCompleteUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/AutoCompleteUI.js"],"names":["React","useState","useEffect","AutoComplete","AutoCompleteUI","categories","setCategories","fetch","then","response","json","data","filterOption","inputValue","option","console","log","name","toUpperCase","indexOf","Complete","width","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,MAA7B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,uEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAAEL,MAAAA,aAAa,CAACK,IAAD,CAAb;AAAqB,KAFvC,EADY,CAKZ;AACD,GANM,EAMJ,EANI,CAAT,CAJyB,CAUhB;;AAEP,QAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,MAAb,KAAwB;AAE3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACE,WAAOA,MAAM,CAACG,IAAP,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkCN,UAAU,CAACK,WAAX,EAAlC,MAAgE,CAAC,CAAxE;AACH,GAJD;;AAMA,QAAME,QAAQ,GAAG,mBACf,QAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF,KADT;AAIE,IAAA,OAAO,EAAEhB,UAJX;AAKE,IAAA,WAAW,EAAC,iBALd;AAME,IAAA,YAAY,EAAEO;AANhB;AAAA;AAAA;AAAA;AAAA,UADF;;AAWAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,UAA5B;AAEA,SAAO,CAACA,UAAU,CAACiB,MAAZ,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,gBAEJ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAFH;AAGL,CAlCD;;GAAMlB,c;;KAAAA,c;AAmCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AutoComplete } from 'antd';\n\nconst AutoCompleteUI = () => {\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(() => {\n        fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n          .then(response => response.json())\n          .then(data => { setCategories(data) });\n    \n        // console.log(count)\n      }, []) // if you add count, only run if count changes.\n\n      const filterOption = (inputValue, option) => {\n\n        console.log('option ', option)\n          return option.name.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n      }\n      \n      const Complete = () => (\n        <AutoComplete\n          style={{\n            width: 200,\n          }}\n          options={categories}\n          placeholder=\"try to type `b`\"\n          filterOption={filterOption}\n        />\n      );\n\n      console.log('CATEGORIES  ', categories)\n      \n      return !categories.length \n        ?<h1>Loading</h1> \n        :<Complete />\n}\nexport default AutoCompleteUI;"]},"metadata":{},"sourceType":"module"}