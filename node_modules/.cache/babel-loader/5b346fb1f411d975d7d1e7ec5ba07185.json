{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { fetchUserTransactions } from './actions';\nimport Container from '@material-ui/core/Container';\nimport Scroll from './components/Scroll';\nimport ListUI from './components/ListUI';\nimport TableUI from './components/TableUI';\nimport EditableTableUI from './components/EditableTableUI';\nimport CardUI from './components/CardUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  fetchUserTransactions,\n  transactions\n}) {\n  _s();\n\n  // const [transactions, setTransactions] = useState([])\n  const [parameter, setParameter] = useState('');\n  const [total, setTotal] = useState(0);\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n  const demoTransactions = /*#__PURE__*/React.createContext();\n  console.log('RELOAD TRICK ', reloadTrick);\n  useEffect(() => {\n    console.log('Use Effect ', transactions); // fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions?category=' + parameter)\n    // .then(response => response.json())\n    // .then(data => { setTransactions(data) });\n\n    fetchUserTransactions(); // console.log(count)\n  }, [reloadTrick]); // if you add count, only run if count changes.\n\n  const onSelect = ({\n    value\n  }) => {\n    onFilter(value);\n    console.log('on search', value); // setParameter(value)\n\n    if (value === 'all') {\n      let calcul = 0;\n      transactions.forEach(tr => {\n        calcul += tr.transaction_details.total;\n      });\n      console.log('ALL ALL ALL', calcul);\n      setTotal(Number(calcul).toFixed(1));\n    } else {\n      let filteredData = transactions.filter(tr => tr.transaction_details.category === value);\n      let calcul = 0;\n      filteredData.forEach(tr => {\n        calcul += tr.transaction_details.total;\n      });\n      setTotal(Number(calcul).toFixed(1));\n      console.log('TOTAL ', total);\n    }\n  };\n\n  const onFilter = value => {\n    console.log('ON FILTER');\n    setParameter(value);\n  };\n\n  const makeid = length => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  const reload = () => {\n    console.log('reload');\n    setReloadTrick(makeid(5));\n  };\n\n  const filteredTransactions = transactions.filter(transaction => {\n    console.log('transactions ', transactions);\n\n    if (parameter === 'all') {\n      return transactions;\n    }\n\n    console.log('transaction tr tr ', transaction.transaction_details.category);\n    return transaction.transaction_details.category.includes(parameter);\n  });\n  return !transactions.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TRANSACTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListUI, {\n      reload: () => reload(),\n      data: filteredTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ANALYTICS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardUI, {\n      onSelect: onSelect,\n      title: \"Total\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [total, \"  \\u20AA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"9y7TooiHK1bYSbwAcO0u6vuzqtE=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions.tr\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/App.js"],"names":["React","useState","useEffect","connect","fetchUserTransactions","Container","Scroll","ListUI","TableUI","EditableTableUI","CardUI","App","transactions","parameter","setParameter","total","setTotal","reloadTrick","setReloadTrick","demoTransactions","createContext","console","log","onSelect","value","onFilter","calcul","forEach","tr","transaction_details","Number","toFixed","filteredData","filter","category","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","reload","filteredTransactions","transaction","includes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport logo from './logo.svg';\nimport './App.css';\nimport { fetchUserTransactions } from './actions';\nimport Container from '@material-ui/core/Container';\nimport Scroll from './components/Scroll';\nimport ListUI from './components/ListUI';\nimport TableUI from './components/TableUI';\nimport EditableTableUI from './components/EditableTableUI';\nimport CardUI from './components/CardUI';\n\n\nfunction App({fetchUserTransactions, transactions}) {\n\n  // const [transactions, setTransactions] = useState([])\n  const [parameter, setParameter] = useState('');\n  const [total, setTotal] = useState(0);\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n\n  const demoTransactions = React.createContext();\n  \n  console.log('RELOAD TRICK ', reloadTrick)\n  useEffect(() => {\n    console.log('Use Effect ', transactions)\n \n      // fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions?category=' + parameter)\n      // .then(response => response.json())\n      // .then(data => { setTransactions(data) });\n\n      fetchUserTransactions();\n  \n    // console.log(count)\n  }, [reloadTrick]) // if you add count, only run if count changes.\n\n\n  \n\n  const onSelect = ({value}) => {\n    onFilter(value)\n    console.log('on search', value)\n    // setParameter(value)\n    if(value === 'all'){\n      let calcul = 0;\n      transactions.forEach(tr => {\n      calcul += tr.transaction_details.total\n      })\n      console.log('ALL ALL ALL', calcul);\n      setTotal(Number(calcul).toFixed(1));\n    }\n    else{\n      let filteredData = transactions.filter( tr => tr.transaction_details.category === value);\n      let calcul = 0;\n      filteredData.forEach(tr => {\n        calcul += tr.transaction_details.total\n      })\n      setTotal(Number(calcul).toFixed(1));\n      console.log('TOTAL ', total)\n    }\n  }\n\n  const onFilter = (value) => {\n    console.log('ON FILTER');\n    setParameter(value);\n  }\n\n  const makeid = (length) => {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * \n      charactersLength));\n   }\n   return result;\n}\n\n  const reload = () => {\n    console.log('reload')\n    setReloadTrick(makeid(5))\n  }\n\n  const filteredTransactions = transactions.filter(transaction =>{\n    console.log('transactions ', transactions)\n    if(parameter === 'all'){\n      return transactions\n    }\n    console.log('transaction tr tr ', transaction.transaction_details.category)\n    return transaction.transaction_details.category.includes(parameter);\n  })\n\n  return !transactions.length ?\n    <h1>Loading</h1> :\n    (\n      <div className=\"root\">\n        <div className=\"header\">\n         <h1>TRANSACTIONS</h1>\n        </div>\n        {/* <Scroll>\n          <ListUI data={transactions} />\n        </Scroll> */}\n        {/* <TableUI onSubmitTag={(value) => onSubmitTag(value)} data={filteredTransactions}/> */}\n        <ListUI reload={() => reload()} data={filteredTransactions}/>\n        <div className=\"header\">\n         <h1>ANALYTICS</h1>\n        </div>\n        <CardUI onSelect={onSelect} title={\"Total\"} >\n          <h1>{total}  ₪</h1>\n        </CardUI>\n      </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions.tr\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}