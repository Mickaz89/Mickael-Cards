{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/cards-client/src/components/EditableForm.js\";\nimport { Form, Input, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditableForm = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"users\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [fields.map(({\n          key,\n          name,\n          fieldKey,\n          ...restField\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            display: 'flex',\n            marginBottom: 8\n          },\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n            name: [name, 'first'],\n            fieldKey: [fieldKey, 'first'],\n            rules: [{\n              required: true,\n              message: 'Missing first name'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n            onClick: () => remove(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"dashed\",\n            onClick: () => add(),\n            block: true,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 71\n            }, this),\n            children: \"Add field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableForm;\nexport default EditableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableForm\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/cards-client/src/components/EditableForm.js"],"names":["Form","Input","Button","Space","MinusCircleOutlined","PlusOutlined","EditableForm","onFinish","values","console","log","fields","add","remove","map","key","name","fieldKey","restField","display","marginBottom","required","message"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,mBAAlD;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,wBAAX;AAAoC,IAAA,QAAQ,EAAED,QAA9C;AAAwD,IAAA,YAAY,EAAC,KAArE;AAAA,4BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAA,gBACG,CAACI,MAAD,EAAS;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAT,kBACC;AAAA,mBACGF,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,UAAAA,GAAF;AAAOC,UAAAA,IAAP;AAAaC,UAAAA,QAAb;AAAuB,aAAGC;AAA1B,SAAD,kBACV,QAAC,KAAD;AAAiB,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,YAAY,EAAE;AAAjC,WAAxB;AAA8D,UAAA,KAAK,EAAC,UAApE;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN,OACMF,SADN;AAEE,YAAA,IAAI,EAAE,CAACF,IAAD,EAAO,OAAP,CAFR;AAGE,YAAA,QAAQ,EAAE,CAACC,QAAD,EAAW,OAAX,CAHZ;AAIE,YAAA,KAAK,EAAE,CAAC;AAAEI,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAJT;AAAA,mCAME,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,mBAAD;AAAqB,YAAA,OAAO,EAAE,MAAMT,MAAM,CAACG,IAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,WAAYD,GAAZ;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAcE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMH,GAAG,EAAxC;AAA4C,YAAA,KAAK,MAAjD;AAAkD,YAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtCD;;KAAMN,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import { Form, Input, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst EditableForm = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return (\n    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n      <Form.List name=\"users\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map(({ key, name, fieldKey, ...restField }) => (\n              <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                <Form.Item\n                  {...restField}\n                  name={[name, 'first']}\n                  fieldKey={[fieldKey, 'first']}\n                  rules={[{ required: true, message: 'Missing first name' }]}\n                >\n                  <Input placeholder=\"First Name\" />\n                </Form.Item>\n                <MinusCircleOutlined onClick={() => remove(name)} />\n              </Space>\n            ))}\n            <Form.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                Add field\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default EditableForm"]},"metadata":{},"sourceType":"module"}