{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction, fetchUserCategories } from '../actions';\nimport { Doughnut } from 'react-chartjs-2';\nimport ListUI from './ListUI';\nimport './Analytics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  fetchUserTransactions,\n  transactions,\n  total\n}) => {\n  _s();\n\n  let tr_categories = transactions.map(c => c.transaction_details.category);\n  let uniq_categories = [...new Set(tr_categories)];\n  useEffect(() => {\n    fetchUserTransactions();\n  }, []);\n  let labels = uniq_categories.map(c => {});\n  const chart_options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"right\",\n        fullSize: false,\n        labels: {\n          padding: 10,\n          font: {\n            size: 22\n          }\n        }\n      }\n    }\n  };\n  const data = {\n    labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [{\n      label: 'My First Dataset',\n      data: [300.50, 50, 100],\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n      hoverOffset: 4\n    }]\n  };\n  let dates = transactions.map(c => {\n    return {\n      date: c.transaction_details.date\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hey Mickael\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to your wallet dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"24px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Your Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"card\",\n            src: process.env.PUBLIC_URL + '/card.png'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"24px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Recent transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListUI, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n          options: chart_options,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions.transactions,\n    categories: state.categories.categories,\n    filter: state.transactions.filter,\n    total: state.transactions.total\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n    fetchUserCategories: () => dispatch(fetchUserCategories()),\n    selectTransaction: transaction => dispatch(selectTransaction(transaction)),\n    openModal: () => dispatch(openModal())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/Dashboard.js"],"names":["React","useEffect","moment","connect","fetchUserTransactions","openModal","selectTransaction","fetchUserCategories","Doughnut","ListUI","Dashboard","transactions","total","tr_categories","map","c","transaction_details","category","uniq_categories","Set","labels","chart_options","plugins","legend","display","position","fullSize","padding","font","size","data","datasets","label","backgroundColor","hoverOffset","dates","date","fontSize","fontWeight","process","env","PUBLIC_URL","mapStateToProps","state","categories","filter","mapDispatchToProps","dispatch","transaction"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction, fetchUserCategories } from '../actions';\nimport { Doughnut } from 'react-chartjs-2';\nimport ListUI from './ListUI';\nimport './Analytics.css'\n\nconst Dashboard = ({fetchUserTransactions, transactions, total}) => {\n\n  let tr_categories = transactions.map(c => c.transaction_details.category);\n\n  let uniq_categories = [...new Set(tr_categories)];\n\n    useEffect(() => {\n        fetchUserTransactions()\n      }, []) \n\n      let labels = uniq_categories.map( c => {\n      })\n\n\n    const chart_options = {\n      plugins:{\n        legend:{\n          display: true,\n          position: \"right\",\n          fullSize: false,\n          labels:{\n            padding: 10,\n            font:{\n              size:22\n            }\n          }\n        }\n      }\n    }\n    const data = {\n        labels: [\n          'Red',\n          'Blue',\n          'Yellow'\n        ],\n        datasets: [{\n          label: 'My First Dataset',\n          data: [300.50, 50, 100],\n          backgroundColor: [\n            'rgb(255, 99, 132)',\n            'rgb(54, 162, 235)',\n            'rgb(255, 205, 86)'\n          ],\n          hoverOffset: 4\n        }]\n      };\n\n      let dates = transactions.map( c => {\n        return {\n          date:c.transaction_details.date\n        }\n      })\n      \n    return(\n        <div className='dashboard-root'>\n            <div className='left'>\n                <div className='user'><h1>Hey Mickael</h1></div>\n                <div><p>Welcome to your wallet dashboard</p></div>\n\n                <div>\n                    <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Your Wallet</div>\n                    <div className='card'>\n                        <img alt=\"card\" src={process.env.PUBLIC_URL + '/card.png'}/> \n                    </div>\n                </div>\n                <div>\n                <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Recent transactions</div>\n                    <ListUI/>\n                </div>\n            </div>\n            <div className='right'>\n            <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Expenses</div>\n                <div>\n                   <Doughnut options={chart_options} data={data}/>\n                   <div>\n                   \n                   </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      transactions: state.transactions.transactions,\n      categories: state.categories.categories,\n      filter: state.transactions.filter,\n      total: state.transactions.total\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n      fetchUserCategories: () => dispatch(fetchUserCategories()),\n      selectTransaction: (transaction) => dispatch(selectTransaction(transaction)),\n      openModal: () => dispatch(openModal()),\n  \n    }\n  }\n  export default connect(mapStateToProps, mapDispatchToProps) (Dashboard);"]},"metadata":{},"sourceType":"module"}