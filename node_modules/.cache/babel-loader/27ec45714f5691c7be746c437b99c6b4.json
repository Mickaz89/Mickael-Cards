{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SelectUI = ({\n  onSelect\n}) => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories').then(response => response.json()).then(data => {\n      setCategories(data);\n    }); // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    onSelect();\n  }\n\n  function onBlur() {\n    console.log('blur');\n  }\n\n  function onFocus() {\n    console.log('focus');\n  }\n\n  function onSearch(val) {\n    console.log('search:', val);\n  }\n\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Select, {\n    showSearch: true,\n    style: {\n      width: 200\n    },\n    placeholder: \"Select a category\",\n    optionFilterProp: \"children\",\n    onChange: onSelect,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onSearch: onSearch,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    children: categories.map(c => /*#__PURE__*/_jsxDEV(Option, {\n      value: c.name,\n      children: c.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectUI, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\n_c = SelectUI;\nexport default SelectUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js"],"names":["React","useState","useEffect","Select","Option","SelectUI","onSelect","categories","setCategories","fetch","then","response","json","data","onChange","value","console","log","onBlur","onFocus","onSearch","val","length","width","input","option","children","toLowerCase","indexOf","map","c","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;;AAEA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,uEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAAEL,MAAAA,aAAa,CAACK,IAAD,CAAb;AAAqB,KAFvC,EADc,CAKd;AACD,GANQ,EAMN,EANM,CAAT,CAJiC,CAU1B;;AAEP,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,KAAM,EAA9B;AACAT,IAAAA,QAAQ;AACT;;AAED,WAASY,MAAT,GAAkB;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AAED,WAASE,OAAT,GAAmB;AACjBH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAED,WAASG,QAAT,CAAkBC,GAAlB,EAAuB;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,GAAvB;AAED;;AAED,SAAO,CAACd,UAAU,CAACe,MAAZ,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,gBAAgB,EAAC,UAJnB;AAKE,IAAA,QAAQ,EAAEjB,QALZ;AAME,IAAA,OAAO,EAAEa,OANX;AAOE,IAAA,MAAM,EAAED,MAPV;AAQE,IAAA,QAAQ,EAAEE,QARZ;AASE,IAAA,YAAY,EAAE,CAACI,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACC,QAAP,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCJ,KAAK,CAACG,WAAN,EAAtC,KAA8D,CAVlE;AAAA,cAcIpB,UAAU,CAACsB,GAAX,CAAeC,CAAC,iBACd,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,IAAjB;AAAA,gBAAwBD,CAAC,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF;AAdJ;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CApDD;;GAAM1B,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst SelectUI = ({ onSelect }) => {\n\n  const [categories, setCategories] = useState([])\n\n  useEffect(() => {\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n      .then(response => response.json())\n      .then(data => { setCategories(data) });\n\n    // console.log(count)\n  }, []) // if you add count, only run if count changes.\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    onSelect()\n  }\n\n  function onBlur() {\n    console.log('blur');\n  }\n\n  function onFocus() {\n    console.log('focus');\n  }\n\n  function onSearch(val) {\n    console.log('search:', val);\n\n  }\n\n  return !categories.length ?\n    <h1>Loading</h1> :\n\n    <Select\n      showSearch\n      style={{ width: 200 }}\n      placeholder=\"Select a category\"\n      optionFilterProp=\"children\"\n      onChange={onSelect}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onSearch={onSearch}\n      filterOption={(input, option) =>\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {\n        categories.map(c => (\n          <Option value={c.name}>{c.name}</Option>\n        ))\n      }\n    </Select> \n}\n\nexport default SelectUI;"]},"metadata":{},"sourceType":"module"}