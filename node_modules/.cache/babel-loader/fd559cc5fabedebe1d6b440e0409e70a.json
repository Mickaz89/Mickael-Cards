{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ModalUI from './ModalUI';\nimport './list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListUI = ({\n  fetchUserTransactions,\n  transactions,\n  reload\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchUserTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-infinite-container\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      useWindow: false,\n      loadMore: () => console.log('load more'),\n      children: [/*#__PURE__*/_jsxDEV(ModalUI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dataSource: transactions,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tag\": \"test\",\n          onClick: () => onTransactionClick(item),\n          children: /*#__PURE__*/_jsxDEV(List.Item, {\n            data: item,\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.vendor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 26\n              }, this),\n              description: item.transaction_details.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: [item.transaction_details.total, \" \\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, item.transaction_details.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListUI, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ListUI;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js"],"names":["React","useState","useEffect","connect","fetchUserTransactions","List","message","Avatar","Spin","Modal","Select","Button","InfiniteScroll","ModalUI","ListUI","transactions","reload","console","log","item","onTransactionClick","fontWeight","transaction_details","vendor","category","tag","total","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,YAAtC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,MAArD,QAAmE,MAAnE;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEV,EAAAA,qBAAF;AAAyBW,EAAAA,YAAzB;AAAwCC,EAAAA;AAAxC,CAAD,KAAsD;AAAA;;AAEnEd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,WAAW,EAAE,KADf;AAEE,MAAA,SAAS,EAAE,CAFb;AAGE,MAAA,SAAS,EAAE,KAHb;AAIE,MAAA,QAAQ,EAAE,MAAMa,OAAO,CAACC,GAAR,CAAY,WAAZ,CAJlB;AAAA,8BAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,IAAD;AACE,QAAA,UAAU,EAAEH,YADd;AAEE,QAAA,UAAU,EAAEI,IAAI,iBACd;AAAK,sBAAS,MAAd;AAAqB,UAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACD,IAAD,CAAtD;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,IAAI,EAAEA,IAAjB;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAEE,cAAA,KAAK,eAAE;AAAA,uCAAG;AAAI,kBAAA,KAAK,EAAE;AAAEE,oBAAAA,UAAU,EAAC;AAAb,mBAAX;AAAA,4BAAkCF,IAAI,CAACG,mBAAL,CAAyBC;AAA3D;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,cAAA,KAAK,eAAE;AAAA,uCAAG;AAAI,kBAAA,KAAK,EAAE;AAACF,oBAAAA,UAAU,EAAC;AAAZ,mBAAX;AAAA,4BAAiCF,IAAI,CAACG,mBAAL,CAAyBE;AAA1D;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,sBADT;AAEE,cAAA,WAAW,EAAEL,IAAI,CAACG,mBAAL,CAAyBG;AAFxC;AAAA;AAAA;AAAA;AAAA,oBANF,eAWE;AAAI,cAAA,KAAK,EAAE;AAACJ,gBAAAA,UAAU,EAAC;AAAZ,eAAX;AAAA,yBAAiCF,IAAI,CAACG,mBAAL,CAAyBI,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA,aAA4BP,IAAI,CAACG,mBAAL,CAAyBK,EAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA1CD;;GAAMb,M;;KAAAA,M;;AA2CN,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,YAAY,EAAEc,KAAK,CAACd;AADf,GAAP;AAGD,CAJD;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL3B,IAAAA,qBAAqB,EAAE,MAAM2B,QAAQ,CAAC3B,qBAAqB,EAAtB;AADhC,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8ChB,MAA9C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ModalUI from './ModalUI';\nimport './list.css'\n\n\nconst ListUI = ({ fetchUserTransactions, transactions,  reload }) => {\n\n  useEffect(() => {\n    fetchUserTransactions()\n  }, []) \n\n  return (\n    <div className=\"demo-infinite-container\">\n      <InfiniteScroll\n        initialLoad={false}\n        pageStart={0}\n        useWindow={false}\n        loadMore={() => console.log('load more')}\n      >\n        <ModalUI/>\n        <List\n          dataSource={transactions}\n          renderItem={item => (\n            <div data-tag=\"test\" onClick={() => onTransactionClick(item)}>\n              <List.Item data={item} key={item.transaction_details.id}>\n                <List.Item.Meta\n                  \n                  title={<a><h2 style={{ fontWeight:\"bold\"}}>{item.transaction_details.vendor}</h2></a>}\n\n                />\n                <List.Item.Meta\n                  title={<a><h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.category}</h2></a>}\n                  description={item.transaction_details.tag}\n                />\n                \n                <h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.total} â‚ª</h2>\n\n\n              </List.Item>\n            </div>\n          )}\n        >\n        </List>\n      </InfiniteScroll>\n    </div>\n  );\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (ListUI);\n"]},"metadata":{},"sourceType":"module"}