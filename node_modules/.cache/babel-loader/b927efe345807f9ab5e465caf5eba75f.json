{"ast":null,"code":"import _slicedToArray from\"/Users/mickaelzana/Desktop/backstage/cards/demo-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{connect}from'react-redux';import{fetchUserTransactions as _fetchUserTransactions,openModal as _openModal,selectTransaction as _selectTransaction,setTotal as _setTotal,setSelectValue as _setSelectValue}from'../actions';import{List,message,Avatar,Spin,Modal,Select,Button}from'antd';import CreatableSelect from'react-select/creatable';import InfiniteScroll from'react-infinite-scroller';import EditableForm from'./EditableForm';import PopoverUI from'./PopoverUI';import ModalUI from'./ModalUI';import _ from'lodash';import'./list.css';import{ContactsOutlined}from'@material-ui/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Option=Select.Option;var fakeDataUrl='https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';var ListUI=function ListUI(_ref){var fetchUserTransactions=_ref.fetchUserTransactions,transactions=_ref.transactions,selectTransaction=_ref.selectTransaction,openModal=_ref.openModal,filter=_ref.filter,setTotal=_ref.setTotal,setSelectValue=_ref.setSelectValue,data=_ref.data;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedItem=_useState2[0],setSelectedItem=_useState2[1];var _useState3=useState(selectedItem&&selectedItem.transaction_details.category),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];useEffect(function(){fetchUserTransactions();},[]);console.log('filter ',filter);var filteredTransactions=_.slice(transactions,0,7);console.log('slice ',filteredTransactions);// const calcul = () => {\n//   if(value === 'all'){\n//     let calcul = 0;\n//     transactions.forEach(tr => {\n//     calcul += tr.transaction_details.total\n//     })\n//     console.log('ALL ALL ALL', calcul);\n//     setTotal(Number(calcul).toFixed(1));\n//   }\n//   else{\n//     let calcul = 0;\n//     filteredTransactions.forEach(tr => {\n//       calcul += tr.transaction_details.total\n//     })\n//     setTotal(Number(calcul).toFixed(1));\n//     console.log('TOTAL ', calcul)\n//   }\n// }\n// calcul()\nvar onTransactionClick=function onTransactionClick(item){console.log('SELECT');selectTransaction(item);openModal();};return!transactions.length?/*#__PURE__*/_jsx(\"div\",{children:\"Loading\"}):/*#__PURE__*/_jsx(\"div\",{className:\"demo-infinite-container\",children:/*#__PURE__*/_jsxs(InfiniteScroll,{initialLoad:false,pageStart:0,useWindow:false,loadMore:function loadMore(){return console.log('load more');},children:[/*#__PURE__*/_jsx(ModalUI,{}),/*#__PURE__*/_jsx(List,{dataSource:filteredTransactions.slice(2),renderItem:function renderItem(item){return/*#__PURE__*/_jsx(\"div\",{\"data-tag\":\"test\",children:/*#__PURE__*/_jsxs(List.Item,{data:item,children:[/*#__PURE__*/_jsx(List.Item.Meta,{title:/*#__PURE__*/_jsx(\"a\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{fontWeight:\"bold\"},children:item.transaction_details.vendor})})}),/*#__PURE__*/_jsxs(\"h2\",{style:{fontWeight:\"bold\"},children:[item.transaction_details.total,\" \\u20AA\"]})]},item.transaction_details.id)});}})]})});};var mapStateToProps=function mapStateToProps(state){return{transactions:state.transactions.transactions,filter:state.transactions.filter,total:state.transactions.total};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchUserTransactions:function fetchUserTransactions(){return dispatch(_fetchUserTransactions());},selectTransaction:function selectTransaction(transaction){return dispatch(_selectTransaction(transaction));},openModal:function openModal(){return dispatch(_openModal());},setTotal:function setTotal(total){return dispatch(_setTotal(total));},setSelectValue:function setSelectValue(value){return dispatch(_setSelectValue(value));}};};export default connect(mapStateToProps,mapDispatchToProps)(ListUI);","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js"],"names":["React","useState","useEffect","connect","fetchUserTransactions","openModal","selectTransaction","setTotal","setSelectValue","List","message","Avatar","Spin","Modal","Select","Button","CreatableSelect","InfiniteScroll","EditableForm","PopoverUI","ModalUI","_","ContactsOutlined","Option","fakeDataUrl","ListUI","transactions","filter","data","selectedItem","setSelectedItem","transaction_details","category","value","setValue","console","log","filteredTransactions","slice","onTransactionClick","item","length","fontWeight","vendor","total","id","mapStateToProps","state","mapDispatchToProps","dispatch","transaction"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,qBAAqB,GAArBA,CAAAA,sBAAT,CAAgCC,SAAS,GAATA,CAAAA,UAAhC,CAA2CC,iBAAiB,GAAjBA,CAAAA,kBAA3C,CAA8DC,QAAQ,GAARA,CAAAA,SAA9D,CAAwEC,cAAc,GAAdA,CAAAA,eAAxE,KAA8F,YAA9F,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,MAAxB,CAAgCC,IAAhC,CAAsCC,KAAtC,CAA6CC,MAA7C,CAAqDC,MAArD,KAAmE,MAAnE,CACA,MAAOC,CAAAA,eAAP,KAA4B,wBAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAO,YAAP,CACA,OAASC,gBAAT,KAAiC,oBAAjC,C,wFAEA,GAAQC,CAAAA,MAAR,CAAmBT,MAAnB,CAAQS,MAAR,CAEA,GAAMC,CAAAA,WAAW,CAAG,uEAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAoH,IAAjHrB,CAAAA,qBAAiH,MAAjHA,qBAAiH,CAA1FsB,YAA0F,MAA1FA,YAA0F,CAA5EpB,iBAA4E,MAA5EA,iBAA4E,CAAxDD,SAAwD,MAAxDA,SAAwD,CAA7CsB,MAA6C,MAA7CA,MAA6C,CAArCpB,QAAqC,MAArCA,QAAqC,CAA3BC,cAA2B,MAA3BA,cAA2B,CAAXoB,IAAW,MAAXA,IAAW,CAGjI,cAAwC3B,QAAQ,CAAC,IAAD,CAAhD,wCAAO4B,YAAP,eAAqBC,eAArB,eACA,eAA0B7B,QAAQ,CAAC4B,YAAY,EAAIA,YAAY,CAACE,mBAAb,CAAiCC,QAAlD,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eAIAhC,SAAS,CAAC,UAAM,CACdE,qBAAqB,GACtB,CAFQ,CAEN,EAFM,CAAT,CAIA+B,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBT,MAAvB,EAEA,GAAMU,CAAAA,oBAAoB,CAAGhB,CAAC,CAACiB,KAAF,CAAQZ,YAAR,CAAsB,CAAtB,CAAyB,CAAzB,CAA7B,CAEAS,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBC,oBAAtB,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAU,CACnCL,OAAO,CAACC,GAAR,CAAY,QAAZ,EACA9B,iBAAiB,CAACkC,IAAD,CAAjB,CACAnC,SAAS,GACV,CAJD,CAMA,MAAO,CAACqB,YAAY,CAACe,MAAd,cACL,gCADK,cAGL,YAAK,SAAS,CAAC,yBAAf,uBACE,MAAC,cAAD,EACE,WAAW,CAAE,KADf,CAEE,SAAS,CAAE,CAFb,CAGE,SAAS,CAAE,KAHb,CAIE,QAAQ,CAAE,0BAAMN,CAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN,EAJZ,wBAME,KAAC,OAAD,IANF,cAOE,KAAC,IAAD,EACE,UAAU,CAAEC,oBAAoB,CAACC,KAArB,CAA2B,CAA3B,CADd,CAEE,UAAU,CAAE,oBAAAE,IAAI,qBACd,YAAK,WAAS,MAAd,uBACE,MAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAEA,IAAjB,wBACE,KAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACE,KAAK,cAAE,gCAAG,WAAI,KAAK,CAAE,CAAEE,UAAU,CAAC,MAAb,CAAX,UAAkCF,IAAI,CAACT,mBAAL,CAAyBY,MAA3D,EAAH,EADT,EADF,cAKE,YAAI,KAAK,CAAE,CAACD,UAAU,CAAC,MAAZ,CAAX,WAAiCF,IAAI,CAACT,mBAAL,CAAyBa,KAA1D,aALF,GAA4BJ,IAAI,CAACT,mBAAL,CAAyBc,EAArD,CADF,EADc,EAFlB,EAPF,GADF,EAHF,CAgCD,CA9ED,CA+EA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLrB,YAAY,CAAEqB,KAAK,CAACrB,YAAN,CAAmBA,YAD5B,CAELC,MAAM,CAAEoB,KAAK,CAACrB,YAAN,CAAmBC,MAFtB,CAGLiB,KAAK,CAAEG,KAAK,CAACrB,YAAN,CAAmBkB,KAHrB,CAAP,CAKD,CAND,CAQA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACL7C,qBAAqB,CAAE,uCAAM6C,CAAAA,QAAQ,CAAC7C,sBAAqB,EAAtB,CAAd,EADlB,CAELE,iBAAiB,CAAE,2BAAC4C,WAAD,QAAiBD,CAAAA,QAAQ,CAAC3C,kBAAiB,CAAC4C,WAAD,CAAlB,CAAzB,EAFd,CAGL7C,SAAS,CAAE,2BAAM4C,CAAAA,QAAQ,CAAC5C,UAAS,EAAV,CAAd,EAHN,CAILE,QAAQ,CAAE,kBAACqC,KAAD,QAAWK,CAAAA,QAAQ,CAAC1C,SAAQ,CAACqC,KAAD,CAAT,CAAnB,EAJL,CAKLpC,cAAc,CAAE,wBAACyB,KAAD,QAAWgB,CAAAA,QAAQ,CAACzC,eAAc,CAACyB,KAAD,CAAf,CAAnB,EALX,CAAP,CAOD,CARD,CASA,cAAe9B,CAAAA,OAAO,CAAC2C,eAAD,CAAkBE,kBAAlB,CAAP,CAA8CvB,MAA9C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction, setTotal, setSelectValue } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport CreatableSelect from 'react-select/creatable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport _ from 'lodash';\nimport './list.css'\nimport { ContactsOutlined } from '@material-ui/icons';\n\nconst { Option } = Select;\n\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({ fetchUserTransactions, transactions, selectTransaction,  openModal, filter, setTotal, setSelectValue, data }) => {\n\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [value, setValue] = useState(selectedItem && selectedItem.transaction_details.category)\n\n\n\n  useEffect(() => {\n    fetchUserTransactions()\n  }, []) \n\n  console.log('filter ', filter)\n\n  const filteredTransactions = _.slice(transactions, 0, 7);\n\n  console.log('slice ', filteredTransactions)\n\n  // const calcul = () => {\n  //   if(value === 'all'){\n  //     let calcul = 0;\n  //     transactions.forEach(tr => {\n  //     calcul += tr.transaction_details.total\n  //     })\n  //     console.log('ALL ALL ALL', calcul);\n  //     setTotal(Number(calcul).toFixed(1));\n  //   }\n  //   else{\n  //     let calcul = 0;\n  //     filteredTransactions.forEach(tr => {\n  //       calcul += tr.transaction_details.total\n  //     })\n  //     setTotal(Number(calcul).toFixed(1));\n  //     console.log('TOTAL ', calcul)\n  //   }\n  // }\n\n  // calcul()\n\n\n  const onTransactionClick = (item) => {\n    console.log('SELECT')\n    selectTransaction(item)\n    openModal()\n  }\n\n  return !transactions.length ?\n    <div>Loading</div> \n    : (\n    <div className=\"demo-infinite-container\">\n      <InfiniteScroll\n        initialLoad={false}\n        pageStart={0}\n        useWindow={false}\n        loadMore={() => console.log('load more')}\n      >\n        <ModalUI/>\n        <List\n          dataSource={filteredTransactions.slice(2)}\n          renderItem={item => (\n            <div data-tag=\"test\">\n              <List.Item data={item} key={item.transaction_details.id}>\n                <List.Item.Meta\n                  title={<a><h2 style={{ fontWeight:\"bold\"}}>{item.transaction_details.vendor}</h2></a>}/>\n               \n  \n                <h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.total} ₪</h2>\n\n\n              </List.Item>\n            </div>\n          )}\n        >\n        </List>\n      </InfiniteScroll>\n    </div>\n  );\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions.transactions,\n    filter: state.transactions.filter,\n    total: state.transactions.total\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n    selectTransaction: (transaction) => dispatch(selectTransaction(transaction)),\n    openModal: () => dispatch(openModal()),\n    setTotal: (total) => dispatch(setTotal(total)),\n    setSelectValue: (value) => dispatch(setSelectValue(value))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (ListUI);\n"]},"metadata":{},"sourceType":"module"}