{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport CreatableSelect from 'react-select/creatable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({\n  fetchUserTransactions,\n  transactions,\n  selectTransaction,\n  openModal,\n  filter\n}) => {\n  _s();\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [value, setValue] = useState(selectedItem && selectedItem.transaction_details.category);\n  useEffect(() => {\n    fetchUserTransactions();\n  }, []);\n  console.log('filter ', filter);\n  const filteredTransactions = transactions.filter(transaction => {\n    console.log('transactions ', transactions);\n\n    if (filter === 'all') {\n      return transactions;\n    }\n\n    console.log('transaction tr tr ', transaction.transaction_details.category);\n    return transaction.transaction_details.category.includes(filter.trim());\n  });\n\n  const calcuk = ({\n    value\n  }) => {\n    onFilter(value);\n    console.log('on search', value); // setParameter(value)\n\n    if (value === 'all') {\n      let calcul = 0;\n      transactions.forEach(tr => {\n        calcul += tr.transaction_details.total;\n      });\n      console.log('ALL ALL ALL', calcul);\n      setTotal(Number(calcul).toFixed(1));\n    } else {\n      let filteredData = transactions.filter(tr => tr.transaction_details.category === value);\n      let calcul = 0;\n      filteredData.forEach(tr => {\n        calcul += tr.transaction_details.total;\n      });\n      setTotal(Number(calcul).toFixed(1));\n      console.log('TOTAL ', total);\n    }\n  };\n\n  const onTransactionClick = item => {\n    console.log('SELECT');\n    selectTransaction(item);\n    openModal();\n  };\n\n  return !transactions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-infinite-container\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      useWindow: false,\n      loadMore: () => console.log('load more'),\n      children: [/*#__PURE__*/_jsxDEV(ModalUI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dataSource: filteredTransactions,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tag\": \"test\",\n          onClick: () => onTransactionClick(item),\n          children: /*#__PURE__*/_jsxDEV(List.Item, {\n            data: item,\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.vendor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 26\n              }, this),\n              description: item.transaction_details.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: [item.transaction_details.total, \" \\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, item.transaction_details.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListUI, \"NYHZONAJmWY+n9w4LusZc3TKDng=\");\n\n_c = ListUI;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions.transactions,\n    filter: state.transactions.filter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n    selectTransaction: transaction => dispatch(selectTransaction(transaction)),\n    openModal: () => dispatch(openModal())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js"],"names":["React","useState","useEffect","connect","fetchUserTransactions","openModal","selectTransaction","List","message","Avatar","Spin","Modal","Select","Button","CreatableSelect","InfiniteScroll","EditableForm","PopoverUI","ModalUI","Option","fakeDataUrl","ListUI","transactions","filter","selectedItem","setSelectedItem","value","setValue","transaction_details","category","console","log","filteredTransactions","transaction","includes","trim","calcuk","onFilter","calcul","forEach","tr","total","setTotal","Number","toFixed","filteredData","onTransactionClick","item","length","fontWeight","vendor","tag","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport CreatableSelect from 'react-select/creatable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css'\n\nconst { Option } = Select;\n\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({ fetchUserTransactions, transactions, selectTransaction,  openModal, filter }) => {\n\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [value, setValue] = useState(selectedItem && selectedItem.transaction_details.category)\n\n\n\n  useEffect(() => {\n    fetchUserTransactions()\n  }, []) \n\n  console.log('filter ', filter)\n\n  const filteredTransactions = transactions.filter(transaction =>{\n    console.log('transactions ', transactions)\n    if(filter === 'all'){\n      return transactions\n    }\n    console.log('transaction tr tr ', transaction.transaction_details.category)\n    return transaction.transaction_details.category.includes(filter.trim());\n  })\n\n  const calcuk = ({value}) => {\n    onFilter(value)\n    console.log('on search', value)\n    // setParameter(value)\n    if(value === 'all'){\n      let calcul = 0;\n      transactions.forEach(tr => {\n      calcul += tr.transaction_details.total\n      })\n      console.log('ALL ALL ALL', calcul);\n      setTotal(Number(calcul).toFixed(1));\n    }\n    else{\n      let filteredData = transactions.filter( tr => tr.transaction_details.category === value);\n      let calcul = 0;\n      filteredData.forEach(tr => {\n        calcul += tr.transaction_details.total\n      })\n      setTotal(Number(calcul).toFixed(1));\n      console.log('TOTAL ', total)\n    }\n  }\n\n\n\n  const onTransactionClick = (item) => {\n    console.log('SELECT')\n    selectTransaction(item)\n    openModal()\n  }\n\n  return !transactions.length ?\n    <div>Loading</div> \n    : (\n    <div className=\"demo-infinite-container\">\n      <InfiniteScroll\n        initialLoad={false}\n        pageStart={0}\n        useWindow={false}\n        loadMore={() => console.log('load more')}\n      >\n        <ModalUI/>\n        <List\n          dataSource={filteredTransactions}\n          renderItem={item => (\n            <div data-tag=\"test\" onClick={() => onTransactionClick(item)}>\n              <List.Item data={item} key={item.transaction_details.id}>\n                <List.Item.Meta\n                  \n                  title={<a><h2 style={{ fontWeight:\"bold\"}}>{item.transaction_details.vendor}</h2></a>}\n\n                />\n                <List.Item.Meta\n                  title={<a><h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.category}</h2></a>}\n                  description={item.transaction_details.tag}\n                />\n                \n                <h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.total} ₪</h2>\n\n\n              </List.Item>\n            </div>\n          )}\n        >\n        </List>\n      </InfiniteScroll>\n    </div>\n  );\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions.transactions,\n    filter: state.transactions.filter\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n    selectTransaction: (transaction) => dispatch(selectTransaction(transaction)),\n    openModal: () => dispatch(openModal())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (ListUI);\n"]},"metadata":{},"sourceType":"module"}