{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/EditableForm.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Form, Input, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditableForm = ({\n  onSubmitTag\n}) => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n    onSubmitTag();\n  };\n\n  return /*#__PURE__*/_jsxDEV(DemoTransactions.Consumer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"dynamic_form_nest_item\",\n      onFinish: onSubmitTag,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.List, {\n        name: \"users\",\n        children: (fields, {\n          add,\n          remove\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(({\n            key,\n            name,\n            fieldKey,\n            ...restField\n          }) => /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              display: 'flex',\n              marginBottom: 8\n            },\n            align: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n              name: 'Tag',\n              fieldKey: [fieldKey, 'tag'],\n              rules: [{\n                required: true,\n                message: 'Missing tag'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              onClick: () => remove(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: () => add(),\n              block: true,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 71\n              }, this),\n              children: \"Add a Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableForm;\nexport default EditableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableForm\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/EditableForm.js"],"names":["React","useState","useEffect","useContext","Form","Input","Button","Space","MinusCircleOutlined","PlusOutlined","EditableForm","onSubmitTag","onFinish","values","console","log","fields","add","remove","map","key","name","fieldKey","restField","display","marginBottom","required","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,mBAAlD;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACtC,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACAF,IAAAA,WAAW;AACZ,GAHD;;AAOA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAAA,2BACG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,wBAAX;AAAoC,MAAA,QAAQ,EAAEA,WAA9C;AAA2D,MAAA,YAAY,EAAC,KAAxE;AAAA,8BACD,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAA,kBACG,CAACK,MAAD,EAAS;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAT,kBACC;AAAA,qBACGF,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,YAAAA,GAAF;AAAOC,YAAAA,IAAP;AAAaC,YAAAA,QAAb;AAAuB,eAAGC;AAA1B,WAAD,kBACV,QAAC,KAAD;AAAiB,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,YAAY,EAAE;AAAjC,aAAxB;AAA8D,YAAA,KAAK,EAAC,UAApE;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN,OACMF,SADN;AAEE,cAAA,IAAI,EAAE,KAFR;AAGE,cAAA,QAAQ,EAAE,CAACD,QAAD,EAAW,KAAX,CAHZ;AAIE,cAAA,KAAK,EAAE,CAAC;AAAEI,gBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,gBAAAA,OAAO,EAAE;AAA3B,eAAD,CAJT;AAAA,qCAME,QAAC,KAAD;AAAO,gBAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,mBAAD;AAAqB,cAAA,OAAO,EAAE,MAAMT,MAAM,CAACG,IAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAYD,GAAZ;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,eAcE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAMH,GAAG,EAAxC;AAA4C,cAAA,KAAK,MAAjD;AAAkD,cAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,sBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADC,eAyBD,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBC;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA3CD;;KAAMP,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Form, Input, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst EditableForm = ({onSubmitTag}) => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n    onSubmitTag()\n  };\n\n  \n\n  return (\n    <DemoTransactions.Consumer>\n       <Form name=\"dynamic_form_nest_item\" onFinish={onSubmitTag} autoComplete=\"off\">\n      <Form.List name=\"users\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map(({ key, name, fieldKey, ...restField }) => (\n              <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                <Form.Item\n                  {...restField}\n                  name={'Tag'}\n                  fieldKey={[fieldKey, 'tag']}\n                  rules={[{ required: true, message: 'Missing tag' }]}\n                >\n                  <Input placeholder=\"Tag\" />\n                </Form.Item>\n                <MinusCircleOutlined onClick={() => remove(name)} />\n              </Space>\n            ))}\n            <Form.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                Add a Tag\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    </DemoTransactions.Consumer>\n  );\n};\n\nexport default EditableForm"]},"metadata":{},"sourceType":"module"}