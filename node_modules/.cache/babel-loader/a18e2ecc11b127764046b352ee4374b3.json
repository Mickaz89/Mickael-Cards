{"ast":null,"code":"import _objectSpread from\"/Users/mickaelzana/Desktop/backstage/cards/demo-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/mickaelzana/Desktop/backstage/cards/demo-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"key\",\"name\",\"fieldKey\"];import React,{useState,useEffect,useContext}from'react';import{Form,Input,Button,Space}from'antd';import{MinusCircleOutlined,PlusOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EditableForm=function EditableForm(_ref){var onSubmitTag=_ref.onSubmitTag,item=_ref.item;var onFinish=function onFinish(values){console.log('Received values of form:',values);onSubmitTag();};console.log('ITEM ITEM ITEM ',item);return/*#__PURE__*/_jsxs(Form,{name:\"dynamic_form_nest_item\",onFinish:function onFinish(value){return onSubmitTag(value,item);},autoComplete:\"off\",children:[/*#__PURE__*/_jsx(Form.List,{name:\"transaction\",children:function children(fields,_ref2){var add=_ref2.add,remove=_ref2.remove;return/*#__PURE__*/_jsxs(_Fragment,{children:[fields.map(function(_ref3){var key=_ref3.key,name=_ref3.name,fieldKey=_ref3.fieldKey,restField=_objectWithoutProperties(_ref3,_excluded);return/*#__PURE__*/_jsxs(Space,{style:{display:'flex',marginBottom:8},align:\"baseline\",children:[/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:'tag',fieldKey:[fieldKey,'tag'],rules:[{required:true,message:'Missing tag'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Tag\"})})),/*#__PURE__*/_jsx(MinusCircleOutlined,{onClick:function onClick(){return remove(name);}})]},key);}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:function onClick(){return add();},block:true,icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:\"Add a Tag\"})})]});}}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit\"})})]});};export default EditableForm;","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/EditableForm.js"],"names":["React","useState","useEffect","useContext","Form","Input","Button","Space","MinusCircleOutlined","PlusOutlined","EditableForm","onSubmitTag","item","onFinish","values","console","log","value","fields","add","remove","map","key","name","fieldKey","restField","display","marginBottom","required","message"],"mappings":"mZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,KAA9B,KAA2C,MAA3C,CACA,OAASC,mBAAT,CAA8BC,YAA9B,KAAkD,mBAAlD,C,6IAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAyB,IAAvBC,CAAAA,WAAuB,MAAvBA,WAAuB,CAAVC,IAAU,MAAVA,IAAU,CAC5C,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,MAAM,CAAI,CACzBC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCF,MAAxC,EACAH,WAAW,GACZ,CAHD,CAKAI,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BJ,IAA/B,EAEA,mBACE,MAAC,IAAD,EAAM,IAAI,CAAC,wBAAX,CAAoC,QAAQ,CAAE,kBAACK,KAAD,QAAWN,CAAAA,WAAW,CAACM,KAAD,CAAQL,IAAR,CAAtB,EAA9C,CAAmF,YAAY,CAAC,KAAhG,wBACE,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,aAAhB,UACG,kBAACM,MAAD,WAAWC,CAAAA,GAAX,OAAWA,GAAX,CAAgBC,MAAhB,OAAgBA,MAAhB,oBACC,2BACGF,MAAM,CAACG,GAAP,CAAW,mBAAGC,CAAAA,GAAH,OAAGA,GAAH,CAAQC,IAAR,OAAQA,IAAR,CAAcC,QAAd,OAAcA,QAAd,CAA2BC,SAA3B,8DACV,MAAC,KAAD,EAAiB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,YAAY,CAAE,CAAjC,CAAxB,CAA8D,KAAK,CAAC,UAApE,wBACE,KAAC,IAAD,CAAM,IAAN,gCACMF,SADN,MAEE,IAAI,CAAE,KAFR,CAGE,QAAQ,CAAE,CAACD,QAAD,CAAW,KAAX,CAHZ,CAIE,KAAK,CAAE,CAAC,CAAEI,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,aAA3B,CAAD,CAJT,uBAME,KAAC,KAAD,EAAO,WAAW,CAAC,KAAnB,EANF,GADF,cASE,KAAC,mBAAD,EAAqB,OAAO,CAAE,yBAAMT,CAAAA,MAAM,CAACG,IAAD,CAAZ,EAA9B,EATF,GAAYD,GAAZ,CADU,EAAX,CADH,cAcE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,yBAAMH,CAAAA,GAAG,EAAT,EAA/B,CAA4C,KAAK,KAAjD,CAAkD,IAAI,cAAE,KAAC,YAAD,IAAxD,uBADF,EAdF,GADD,EADH,EADF,cAyBE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,oBADF,EAzBF,GADF,CAiCD,CAzCD,CA2CA,cAAeT,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Form, Input, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst EditableForm = ({onSubmitTag, item}) => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n    onSubmitTag()\n  };\n\n  console.log('ITEM ITEM ITEM ', item)\n\n  return (\n    <Form name=\"dynamic_form_nest_item\" onFinish={(value) => onSubmitTag(value, item)} autoComplete=\"off\">\n      <Form.List name=\"transaction\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map(({ key, name, fieldKey, ...restField }) => (\n              <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                <Form.Item\n                  {...restField}\n                  name={'tag'}\n                  fieldKey={[fieldKey, 'tag']}\n                  rules={[{ required: true, message: 'Missing tag' }]}\n                >\n                  <Input placeholder=\"Tag\" />\n                </Form.Item>\n                <MinusCircleOutlined onClick={() => remove(name)} />\n              </Space>\n            ))}\n            <Form.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                Add a Tag\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default EditableForm"]},"metadata":{},"sourceType":"module"}