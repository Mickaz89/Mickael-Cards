{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectOrCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserCategories, createTransactionCategory, editTransactionCategory } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SelectOrCreate = ({\n  loading,\n  fetchUserCategories,\n  createTransactionCategory,\n  editTransactionCategory,\n  categories,\n  select\n}) => {\n  _s();\n\n  const [value, setValue] = useState({});\n  useEffect(() => {\n    fetchUserCategories();\n    setValue(search(select && select.transaction_details.category, selectorOptions.length > 0 && selectorOptions));\n  }, []);\n  let selectorOptions = categories.map(c => {\n    return {\n      label: c.name,\n      value: c.name\n    };\n  });\n\n  const onCreate = value => {\n    console.log('create ', value);\n\n    if (value != \"\") {\n      console.log('create');\n      createTransactionCategory(value);\n    }\n  };\n\n  function search(nameKey, myArray) {\n    for (var i = 0; i < myArray.length; i++) {\n      if (myArray[i].value.trim() === nameKey.trim()) {\n        return myArray[i];\n      }\n    }\n  }\n\n  const defaultValue = () => {\n    return value; // return search(select && select.transaction_details.category, selectorOptions.length > 0 && selectorOptions)\n  };\n\n  const onSubmitTag = value => {\n    editTransactionCategory(value.value);\n  };\n\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      onChange: onSubmitTag,\n      value: defaultValue(),\n      options: selectorOptions,\n      className: \"select\",\n      onCreateOption: onCreate,\n      isLoading: loading,\n      isDisabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectOrCreate, \"4CysSj7Js+QL0/Jqy5LPceapPCY=\");\n\n_c = SelectOrCreate;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.categories,\n    loading: state.categories.loading,\n    select: state.select\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories()),\n    createTransactionCategory: category => dispatch(createTransactionCategory(category)),\n    editTransactionCategory: category => dispatch(editTransactionCategory(category))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOrCreate);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectOrCreate\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectOrCreate.js"],"names":["React","useState","useEffect","connect","fetchUserCategories","createTransactionCategory","editTransactionCategory","CreatableSelect","Button","Select","Option","SelectOrCreate","loading","categories","select","value","setValue","search","transaction_details","category","selectorOptions","length","map","c","label","name","onCreate","console","log","nameKey","myArray","i","trim","defaultValue","onSubmitTag","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserCategories, createTransactionCategory, editTransactionCategory } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst SelectOrCreate = ({loading, \n  fetchUserCategories, \n  createTransactionCategory, \n  editTransactionCategory,\n  categories, \n  select }) => {\n\n  const [value, setValue] = useState({})\n\n  useEffect(() => {\n    fetchUserCategories()\n    setValue(search(select && select.transaction_details.category, selectorOptions.length > 0 && selectorOptions));\n  }, []) \n\n\n  let selectorOptions = categories.map( c => {\n    return {\n      label:c.name,\n      value:c.name\n    }\n  })\n\n\n  const onCreate = (value) => {\n    console.log('create ', value)\n    if (value != \"\") {\n      console.log('create')\n      createTransactionCategory(value)\n    }\n}\nfunction search(nameKey, myArray){\n  for (var i=0; i < myArray.length; i++) {\n      if (myArray[i].value.trim() === nameKey.trim()) {\n          return myArray[i];\n      }\n  }\n}\nconst defaultValue = () => {\n  return value\n  // return search(select && select.transaction_details.category, selectorOptions.length > 0 && selectorOptions)\n}\n\nconst onSubmitTag = (value) => {\n  editTransactionCategory(value.value)\n}\n\n\nreturn !categories.length \n? <h2>Loading</h2>\n:\n\n  <div>\n    <CreatableSelect\n            onChange={onSubmitTag}\n            value={defaultValue()}\n            options={selectorOptions}\n            className=\"select\"\n            onCreateOption={onCreate}\n            isLoading={loading}\n            isDisabled={loading}\n          />\n  </div>\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories.categories,\n    loading: state.categories.loading,\n    select: state.select\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories()),\n    createTransactionCategory: (category) => dispatch(createTransactionCategory(category)),\n    editTransactionCategory: (category) => dispatch(editTransactionCategory(category)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (SelectOrCreate);"]},"metadata":{},"sourceType":"module"}