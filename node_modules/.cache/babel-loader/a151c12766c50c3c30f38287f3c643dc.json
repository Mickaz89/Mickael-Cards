{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport CreatableSelect from 'react-select/creatable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({\n  fetchUserTransactions,\n  transactions,\n  reload\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [create, setCreate] = useState(false);\n  const [newCategory, setNewCategory] = useState(null);\n  const [value, setValue] = useState(selectedItem && selectedItem.transaction_details.category);\n  useEffect(() => {\n    // console.log('use effect select ', value)\n    // fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n    //   .then(response => response.json())\n    //   .then(data => { setCategories(data) });\n    // console.log(count)\n    fetchUserTransactions();\n  }, [value]); // if you add count, only run if count changes.\n\n  let selectorOptions = categories.map(c => {\n    return {\n      label: c.name,\n      value: c.name\n    };\n  });\n  console.log('data data ', selectorOptions);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setVisible(false);\n    console.log('resect select');\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onTransactionClick = item => {\n    console.log('ITEM ITEM ', item);\n    setSelectedItem(item);\n    setValue(item.transaction_details.category);\n    showModal();\n  };\n\n  const onFinish = (value, item) => {\n    handleOk();\n    onSubmitTag(value, item);\n  };\n\n  const reloadModal = () => {\n    console.log('RELOAD MODAL LIST UI');\n    handleOk();\n  };\n\n  const isCreate = value => {\n    setCreate(value);\n  };\n\n  const onType = value => {\n    setNewCategory(value);\n  };\n\n  function onBlur() {\n    console.log('blur');\n    reload();\n  }\n\n  function onFocus() {\n    console.log('focus');\n  }\n\n  function onSearch(val) {\n    const filteredCategories = categories.filter(category => {\n      return category.name.includes(val);\n    });\n\n    if (filteredCategories.length > 0) {} else {\n      // setOnCreate(true)\n      isCreate(true);\n      onType(val);\n    }\n  }\n\n  function filterOption(input, option) {\n    const result = option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    return result;\n  }\n\n  const onCreate = v => {\n    setLoading(true);\n    setDisabled(true);\n\n    if (v != null) {\n      fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"category\": v\n        })\n      }).then(response => response.json()).then(data => {\n        setLoading(false);\n        setDisabled(false);\n        setCategories(data);\n      });\n    }\n  };\n\n  const onSubmitTag = value => {\n    setValue(value.value);\n    console.log('VALUE VALUE ', value);\n    console.log('SELECTED ITEM ', selectedItem);\n    fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"category\": value.value\n      })\n    }).then(response => response.json()).then(data => {\n      reload();\n      handleOk();\n      setValue(''); // setVisible(false)\n      // reloadModal(value);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-infinite-container\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      useWindow: false,\n      loadMore: () => console.log('load more'),\n      children: [/*#__PURE__*/_jsxDEV(ModalUI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dataSource: transactions,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tag\": \"test\",\n          onClick: () => onTransactionClick(item),\n          children: /*#__PURE__*/_jsxDEV(List.Item, {\n            data: item,\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.vendor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.transaction_details.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 26\n              }, this),\n              description: item.transaction_details.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: [item.transaction_details.total, \" \\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, item.transaction_details.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListUI, \"D72Hh3ycF/vAc5dcVZNJZMEUJvk=\");\n\n_c = ListUI;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js"],"names":["React","useState","useEffect","connect","fetchUserTransactions","List","message","Avatar","Spin","Modal","Select","Button","CreatableSelect","InfiniteScroll","EditableForm","PopoverUI","ModalUI","Option","fakeDataUrl","ListUI","transactions","reload","visible","setVisible","loading","setLoading","disabled","setDisabled","selectedItem","setSelectedItem","category","setCategory","reloadTrick","setReloadTrick","categories","setCategories","create","setCreate","newCategory","setNewCategory","value","setValue","transaction_details","selectorOptions","map","c","label","name","console","log","showModal","handleOk","handleCancel","onTransactionClick","item","onFinish","onSubmitTag","reloadModal","isCreate","onType","onBlur","onFocus","onSearch","val","filteredCategories","filter","includes","length","filterOption","input","option","result","children","toLowerCase","indexOf","onCreate","v","fetch","method","headers","body","JSON","stringify","then","response","json","data","uuid","fontWeight","vendor","tag","total","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions } from '../actions';\nimport { List, message, Avatar, Spin, Modal, Select, Button } from 'antd';\nimport CreatableSelect from 'react-select/creatable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css'\n\nconst { Option } = Select;\n\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({ fetchUserTransactions, transactions,  reload }) => {\n\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n  const [categories, setCategories] = useState([])\n  const [create, setCreate] = useState(false)\n  const [newCategory, setNewCategory] = useState(null)\n  const [value, setValue] = useState(selectedItem && selectedItem.transaction_details.category)\n\n\n\n  useEffect(() => {\n    // console.log('use effect select ', value)\n    // fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n    //   .then(response => response.json())\n    //   .then(data => { setCategories(data) });\n\n    // console.log(count)\n\n    fetchUserTransactions()\n  }, [value]) // if you add count, only run if count changes.\n\n  let selectorOptions = categories.map( c => {\n    return {\n      label:c.name,\n      value:c.name\n    }\n  })\n\n  console.log('data data ', selectorOptions)\n  \n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setVisible(false);\n    console.log('resect select')\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onTransactionClick = (item) => {\n    console.log('ITEM ITEM ', item)\n    setSelectedItem(item);\n    setValue(item.transaction_details.category)\n    showModal()\n  }\n\n  const onFinish = (value, item) => {\n    handleOk()\n    onSubmitTag(value, item)\n  };\n\n  const reloadModal = () => {\n    console.log('RELOAD MODAL LIST UI')\n    handleOk()\n  };\n\n  const isCreate = (value) => {\n    setCreate(value)\n  }\n\n  const onType = (value) => {\n    setNewCategory(value)\n  }\n\n\n\n\n\n  function onBlur() {\n    console.log('blur')\n    reload()\n  }\n\n  function onFocus() {\n    console.log('focus')\n  }\n\n\n  function onSearch(val) {\n    const filteredCategories = categories.filter(category => {\n      return category.name.includes(val);\n    })\n    if (filteredCategories.length > 0) {\n\n\n    }\n    else {\n      // setOnCreate(true)\n      isCreate(true)\n      onType(val)\n    }\n  }\n\n  function filterOption(input, option) {\n    const result = option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    return result\n  }\n\n  const onCreate = (v) => {\n    setLoading(true);\n    setDisabled(true);\n    if (v != null) {\n      fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ \"category\": v })\n      })\n        .then(response => response.json())\n        .then(data => { \n          setLoading(false);\n          setDisabled(false);\n          setCategories(data) \n        });\n    }\n\n  }\n  const onSubmitTag = (value) => {\n    setValue(value.value)\n    console.log('VALUE VALUE ', value)\n    console.log('SELECTED ITEM ', selectedItem)\n    fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ \"category\": value.value })\n    })\n      .then(response => response.json())\n      .then(data => {\n        reload()\n        handleOk()\n        setValue('')\n        // setVisible(false)\n        // reloadModal(value);\n\n      });\n  }\n\n  return (\n    <div className=\"demo-infinite-container\">\n      <InfiniteScroll\n        initialLoad={false}\n        pageStart={0}\n        useWindow={false}\n        loadMore={() => console.log('load more')}\n      >\n        <ModalUI/>\n        <List\n          dataSource={transactions}\n          renderItem={item => (\n            <div data-tag=\"test\" onClick={() => onTransactionClick(item)}>\n              <List.Item data={item} key={item.transaction_details.id}>\n                <List.Item.Meta\n                  \n                  title={<a><h2 style={{ fontWeight:\"bold\"}}>{item.transaction_details.vendor}</h2></a>}\n\n                />\n                <List.Item.Meta\n                  title={<a><h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.category}</h2></a>}\n                  description={item.transaction_details.tag}\n                />\n                \n                <h2 style={{fontWeight:\"bold\"}}>{item.transaction_details.total} ₪</h2>\n\n\n              </List.Item>\n            </div>\n          )}\n        >\n        </List>\n      </InfiniteScroll>\n    </div>\n  );\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserTransactions: () => dispatch(fetchUserTransactions())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (ListUI);\n"]},"metadata":{},"sourceType":"module"}