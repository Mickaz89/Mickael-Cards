{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectOrCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserCategories, createTransactionCategory } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SelectOrCreate = ({\n  loading,\n  fetchUserCategories,\n  categories\n}) => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    fetchUserCategories();\n  }, []);\n  let selectorOptions = categories.map(c => {\n    return {\n      label: c.name,\n      value: c.name\n    };\n  });\n\n  const onCreate = () => {\n    if (value != null) {\n      fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"category\": value\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    }\n\n    console.log('click');\n  };\n\n  const onSubmitTag = value => {\n    setValue(value);\n    console.log('VALUE VALUE ', value); // fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n    //   method: 'PUT',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body:JSON.stringify({\"category\":value})\n    // })\n    // .then(response => response.json())\n    // .then(data => { \n    //   reload() \n    //   closeModal()\n    //   setValue('')\n    //   // setVisible(false)\n    //   // reloadModal(value);\n    // });\n  };\n\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      onChange: onSubmitTag,\n      options: selectorOptions,\n      className: \"select\",\n      onCreateOption: onCreate,\n      isLoading: loading,\n      isDisabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectOrCreate, \"8/j/U2Dmu444I+OEOdr+aVI5ADc=\");\n\n_c = SelectOrCreate;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.categories,\n    loading: state.categories.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories()),\n    createTransactionCategory: category => dispatch(createTransactionCategory())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectOrCreate);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectOrCreate\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectOrCreate.js"],"names":["React","useState","useEffect","connect","fetchUserCategories","createTransactionCategory","CreatableSelect","Button","Select","Option","SelectOrCreate","loading","categories","value","setValue","selectorOptions","map","c","label","name","onCreate","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","onSubmitTag","length","mapStateToProps","state","mapDispatchToProps","dispatch","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserCategories, createTransactionCategory } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst SelectOrCreate = ({loading, fetchUserCategories, categories }) => {\n\n  const [value, setValue] = useState(\"\")\n\n  useEffect(() => {\n    fetchUserCategories()\n  }, []) \n\n\n  let selectorOptions = categories.map( c => {\n    return {\n      label:c.name,\n      value:c.name\n    }\n  })\n\n\n  const onCreate = () => {\n    if (value != null) {\n        fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"category\": value })\n        })\n            .then(response => response.json())\n            .then(data => { console.log(data) });\n    }\n    console.log('click')\n}\n\nconst onSubmitTag = (value) => {\n  setValue(value)\n  console.log('VALUE VALUE ', value)\n  // fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n  //   method: 'PUT',\n  //   headers: {\n  //     'Accept': 'application/json',\n  //     'Content-Type': 'application/json'\n  //   },\n  //   body:JSON.stringify({\"category\":value})\n  // })\n  // .then(response => response.json())\n  // .then(data => { \n  //   reload() \n  //   closeModal()\n  //   setValue('')\n  //   // setVisible(false)\n  //   // reloadModal(value);\n    \n  // });\n}\n\n\nreturn !categories.length \n? <h2>Loading</h2>\n:\n\n  <div>\n    <CreatableSelect\n            onChange={onSubmitTag}\n            options={selectorOptions}\n            className=\"select\"\n            onCreateOption={onCreate}\n            isLoading={loading}\n            isDisabled={loading}\n          />\n  </div>\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories.categories,\n    loading: state.categories.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories()),\n    createTransactionCategory: (category) => dispatch(createTransactionCategory()),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (SelectOrCreate);"]},"metadata":{},"sourceType":"module"}