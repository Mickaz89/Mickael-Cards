{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/cards-client/src/components/TableUI.js\",\n    _s = $RefreshSig$();\n\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c = EditableCell;\n\nconst TableUI = ({\n  data\n}) => {\n  const columns = [{\n    title: 'Vendor',\n    dataIndex: ['transaction_details', 'vendor'],\n    editable: true\n  }, {\n    title: 'Total',\n    dataIndex: ['transaction_details', 'total']\n  }, {\n    title: 'Category',\n    dataIndex: ['transaction_details', 'category']\n  }, {\n    title: 'Tag',\n    dataIndex: ['transaction_details', 'tag'],\n    editable: true\n  }];\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    components: components,\n    dataSource: data,\n    pagination: false,\n    scroll: {\n      y: 240\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = TableUI;\nexport default TableUI;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"TableUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/cards-client/src/components/TableUI.js"],"names":["Table","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","useState","inputRef","useRef","form","useContext","EditableContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","TableUI","data","columns","components","body","row","EditableRow","cell","y"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nconst TableUI = ({data}) => {\n  const columns = [\n    {\n      title: 'Vendor',\n      dataIndex: ['transaction_details', 'vendor'],\n      editable:true\n     \n    },\n    {\n      title: 'Total',\n      dataIndex: ['transaction_details', 'total'],\n      \n    },\n    {\n      title: 'Category',\n      dataIndex: ['transaction_details', 'category'],\n    },\n    {\n        title: 'Tag',\n        dataIndex: ['transaction_details', 'tag'],\n        editable: true\n    },\n  ];\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  \n  return (\n    <Table columns={columns} components={components} dataSource={data} pagination={false} scroll={{ y: 240 }} />\n  )\n\n}\n\nexport default TableUI;"]},"metadata":{},"sourceType":"module"}