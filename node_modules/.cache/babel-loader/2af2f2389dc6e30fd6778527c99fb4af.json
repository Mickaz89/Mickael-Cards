{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SelectUI = ({\n  onSelect,\n  data\n}) => {\n  _s();\n\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [create, setCreate] = useState(false);\n  useEffect(() => {\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories').then(response => response.json()).then(data => {\n      setCategories(data);\n    }); // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  const makeid = length => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  const isCreate = value => {\n    setCreate(value);\n  };\n\n  const onType = value => {\n    setNewCategory(value);\n  };\n\n  const reload = () => {\n    console.log('reload');\n    setReloadTrick(makeid(5));\n  };\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    onSelect();\n  }\n\n  function onBlur() {\n    reload();\n  }\n\n  function onFocus() {}\n\n  function onSearch(val) {\n    const filteredCategories = data.filter(category => {\n      return category.name.includes(val);\n    });\n\n    if (filteredCategories.length > 0) {} else {\n      // setOnCreate(true)\n      isCreate(true);\n      onType(val);\n    }\n  }\n\n  function filterOption(input, option) {\n    const result = option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    return result;\n  }\n\n  const onCreate = () => {\n    if (newCategory != null) {\n      fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"category\": newCategory\n        })\n      }).then(response => response.json()).then(data => {\n        setCategories(data);\n      });\n    }\n\n    console.log('click');\n    setCreate(false);\n  };\n\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Select a category\",\n      optionFilterProp: \"children\",\n      onChange: onSelect,\n      onBlur: onBlur,\n      onSearch: onSearch,\n      filterOption: filterOption,\n      allowClear: true,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), categories.map(c => /*#__PURE__*/_jsxDEV(Option, {\n        value: c.name,\n        children: c.name\n      }, c.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectUI, \"l4XTJwFuL5ZiRpdkZIFC8XG7jT8=\");\n\n_c = SelectUI;\nexport default SelectUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js"],"names":["React","useState","useEffect","Button","Select","Option","SelectUI","onSelect","data","reloadTrick","setReloadTrick","categories","setCategories","create","setCreate","fetch","then","response","json","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","isCreate","value","onType","setNewCategory","reload","console","log","onChange","onBlur","onFocus","onSearch","val","filteredCategories","filter","category","name","includes","filterOption","input","option","children","toLowerCase","indexOf","onCreate","newCategory","method","headers","body","JSON","stringify","width","map","c","uuid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst SelectUI = ({ onSelect, data }) => {\n\n  const [reloadTrick, setReloadTrick] = useState(\"\");\n  const [categories, setCategories] = useState([])\n  const [create, setCreate] = useState(false)\n\n  useEffect(() => {\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n      .then(response => response.json())\n      .then(data => { setCategories(data) });\n\n    // console.log(count)\n  }, []) // if you add count, only run if count changes.\n\n\n  const makeid = (length) => {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * \n      charactersLength));\n   }\n   return result;\n}\n\nconst isCreate = (value) => {\n  setCreate(value)\n}\n\nconst onType = (value) => {\n  setNewCategory(value)\n}\n\n  const reload = () => {\n    console.log('reload')\n    setReloadTrick(makeid(5))\n  }\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    onSelect()\n  }\n\n  function onBlur() {\n    reload()\n  }\n\n  function onFocus() {\n    \n  }\n\n\n  function onSearch(val) {\n    const filteredCategories = data.filter(category =>{\n      return category.name.includes(val);\n    })\n    if(filteredCategories.length > 0){\n     \n\n    }\n    else{\n      // setOnCreate(true)\n      isCreate(true)\n      onType(val)\n    }\n  }\n\n  function filterOption(input, option){\n    const result = option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 ;\n    return result\n  }\n\n  const onCreate = () => {\n    if (newCategory != null) {\n        fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"category\": newCategory })\n        })\n            .then(response => response.json())\n            .then(data => { setCategories(data) });\n    }\n    console.log('click')\n    setCreate(false);\n}\n\nreturn !categories.length \n? <h2>Loading</h2>\n:\n\n  <div>\n    <Select\n        showSearch\n        style={{ width: 200 }}\n        placeholder=\"Select a category\"\n        optionFilterProp=\"children\"\n        onChange={onSelect}\n        onBlur={onBlur}\n        onSearch={onSearch}\n        filterOption={(filterOption)}\n        allowClear\n      >\n        <Option value=\"all\">All</Option>\n        {\n          categories.map(c => (\n            <Option key={c.uuid} value={c.name}>{c.name}</Option>\n          ))\n        }\n      </Select>\n        {/* {onCreate ? <Button onClick={() => console.log('click')}>Create</Button> : null} */}\n  </div>\n\n}\n\nexport default SelectUI;"]},"metadata":{},"sourceType":"module"}