{"ast":null,"code":"import _toConsumableArray from\"/Users/mickaelzana/Desktop/backstage/cards/demo-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect}from'react';import moment from'moment';import{connect}from'react-redux';import{fetchUserTransactions as _fetchUserTransactions,openModal as _openModal,selectTransaction as _selectTransaction,fetchUserCategories as _fetchUserCategories}from'../actions';import{Doughnut}from'react-chartjs-2';import ListUI from'./ListUI';import'./Analytics.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(_ref){var fetchUserTransactions=_ref.fetchUserTransactions,transactions=_ref.transactions,total=_ref.total;var tr_categories=transactions.map(function(c){return c.transaction_details.category;});var uniq_categories=_toConsumableArray(new Set(tr_categories));useEffect(function(){fetchUserTransactions();},[]);var labels=uniq_categories.map(function(c){return c;});console.log('total ',total);var totals=total&&Object.keys(total).map(function(key){return total[key];});console.log('totals ',totals);var chart_options={plugins:{legend:{display:true,position:\"right\",fullSize:true,maxWidth:250,labels:{padding:10,font:{size:22}}}}};var data={labels:labels,datasets:[{label:'My First Dataset',data:totals,backgroundColor:['rgb(255, 99, 132)','rgb(54, 162, 235)','rgb(255, 205, 86)','rgb(103, 58, 183)','rgb(118, 255, 3)'],hoverOffset:4}]};var dates=transactions.map(function(c){return{date:c.transaction_details.date};});return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-root\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Hey Mickael\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to your wallet dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\",fontWeight:\"bold\"},children:\"Your Wallet\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"card\",src:process.env.PUBLIC_URL+'/card.png'})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\",fontWeight:\"bold\"},children:\"Recent transactions\"}),/*#__PURE__*/_jsx(ListUI,{})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"right\",children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"24px\",fontWeight:\"bold\"},children:\"Expenses\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:/*#__PURE__*/_jsx(Doughnut,{options:chart_options,data:data})})]})]});};var mapStateToProps=function mapStateToProps(state){return{transactions:state.transactions.transactions,categories:state.categories.categories,filter:state.transactions.filter,total:state.transactions.total};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchUserTransactions:function fetchUserTransactions(){return dispatch(_fetchUserTransactions());},fetchUserCategories:function fetchUserCategories(){return dispatch(_fetchUserCategories());},selectTransaction:function selectTransaction(transaction){return dispatch(_selectTransaction(transaction));},openModal:function openModal(){return dispatch(_openModal());}};};export default connect(mapStateToProps,mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/Dashboard.js"],"names":["React","useEffect","moment","connect","fetchUserTransactions","openModal","selectTransaction","fetchUserCategories","Doughnut","ListUI","Dashboard","transactions","total","tr_categories","map","c","transaction_details","category","uniq_categories","Set","labels","console","log","totals","Object","keys","key","chart_options","plugins","legend","display","position","fullSize","maxWidth","padding","font","size","data","datasets","label","backgroundColor","hoverOffset","dates","date","fontSize","fontWeight","process","env","PUBLIC_URL","mapStateToProps","state","categories","filter","mapDispatchToProps","dispatch","transaction"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { fetchUserTransactions, openModal, selectTransaction, fetchUserCategories } from '../actions';\nimport { Doughnut } from 'react-chartjs-2';\nimport ListUI from './ListUI';\nimport './Analytics.css'\n\nconst Dashboard = ({fetchUserTransactions, transactions, total}) => {\n\n  let tr_categories = transactions.map(c => c.transaction_details.category);\n\n  let uniq_categories = [...new Set(tr_categories)];\n\n    useEffect(() => {\n        fetchUserTransactions()\n      }, []) \n\n      let labels = uniq_categories.map( c => c)\n\n      console.log('total ', total)\n\n      var totals = total && Object.keys(total).map((key) => total[key]);\n\n      console.log('totals ', totals)\n\n\n    const chart_options = {\n      plugins:{\n        legend:{\n          display: true,\n          position: \"right\",\n          fullSize: true,\n          maxWidth: 250,\n          labels:{\n            padding: 10,\n            font:{\n              size:22\n            }\n          }\n        }\n      }\n    }\n    const data = {\n        labels: labels,\n        datasets: [{\n          label: 'My First Dataset',\n          data: totals,\n          backgroundColor: [\n            'rgb(255, 99, 132)',\n            'rgb(54, 162, 235)',\n            'rgb(255, 205, 86)',\n            'rgb(103, 58, 183)',\n            'rgb(118, 255, 3)'\n          ],\n          hoverOffset: 4\n        }]\n      };\n\n      let dates = transactions.map( c => {\n        return {\n          date:c.transaction_details.date\n        }\n      })\n      \n    return(\n        <div className='dashboard-root'>\n            <div className='left'>\n                <div className='user'><h1>Hey Mickael</h1></div>\n                <div><p>Welcome to your wallet dashboard</p></div>\n\n                <div>\n                    <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Your Wallet</div>\n                    <div className='card'>\n                        <img alt=\"card\" src={process.env.PUBLIC_URL + '/card.png'}/> \n                    </div>\n                </div>\n                <div>\n                <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Recent transactions</div>\n                    <ListUI/>\n                </div>\n            </div>\n            <div className='right'>\n            <div style={{fontSize:\"24px\", fontWeight:\"bold\"}}>Expenses</div>\n                <div className='chart'>\n                   <Doughnut options={chart_options} data={data}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      transactions: state.transactions.transactions,\n      categories: state.categories.categories,\n      filter: state.transactions.filter,\n      total: state.transactions.total\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      fetchUserTransactions: () => dispatch(fetchUserTransactions()),\n      fetchUserCategories: () => dispatch(fetchUserCategories()),\n      selectTransaction: (transaction) => dispatch(selectTransaction(transaction)),\n      openModal: () => dispatch(openModal()),\n  \n    }\n  }\n  export default connect(mapStateToProps, mapDispatchToProps) (Dashboard);"]},"metadata":{},"sourceType":"module"}