{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { List, message, Avatar, Spin, Modal } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({\n  data,\n  onSubmitTag,\n  reload\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  useEffect(() => {// console.log(count)\n  }, [selectedItem]); // if you add count, only run if count changes.\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setVisible(false);\n    console.log('resect select');\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onTransactionClick = item => {\n    console.log('ITEM ITEM ', item);\n    setSelectedItem(item);\n    showModal();\n  };\n\n  const onFinish = (value, item) => {\n    handleOk();\n    onSubmitTag(value, item);\n  };\n\n  const reloadModal = () => {\n    console.log('RELOAD MODAL LIST UI');\n    handleOk();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-infinite-container\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      useWindow: false,\n      loadMore: () => console.log('load more'),\n      children: [/*#__PURE__*/_jsxDEV(ModalUI, {\n        visible: visible,\n        handleCancel: handleCancel,\n        handleOk: handleOk,\n        reload: reload,\n        selectedItem: selectedItem,\n        reloadModal: reloadModal,\n        resetSelect: handleOk,\n        closeModal: handleOk()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dataSource: data,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tag\": \"test\",\n          onClick: () => onTransactionClick(item),\n          children: /*#__PURE__*/_jsxDEV(List.Item, {\n            data: item,\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.transaction_details.vendor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.transaction_details.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 26\n              }, this),\n              description: item.transaction_details.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [item.transaction_details.total, \" \\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, item.transaction_details.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ListUI, \"AvbYBZk6D5Vo4NudfLDqCfkKPJg=\");\n\n_c = ListUI;\nexport default ListUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/ListUI.js"],"names":["React","useState","useEffect","List","message","Avatar","Spin","Modal","InfiniteScroll","EditableForm","PopoverUI","ModalUI","fakeDataUrl","ListUI","data","onSubmitTag","reload","visible","setVisible","selectedItem","setSelectedItem","showModal","handleOk","console","log","handleCancel","onTransactionClick","item","onFinish","value","reloadModal","transaction_details","vendor","category","tag","total","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, message, Avatar, Spin, Modal} from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport EditableForm from './EditableForm';\nimport PopoverUI from './PopoverUI';\nimport ModalUI from './ModalUI';\nimport './list.css'\n\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\n\nconst ListUI = ({data, onSubmitTag, reload}) => {\n\n  const [visible, setVisible] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  useEffect(() => {\n\n    // console.log(count)\n  }, [selectedItem]) // if you add count, only run if count changes.\n  \n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setVisible(false);\n    console.log('resect select')\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onTransactionClick = (item) => {\n    console.log('ITEM ITEM ' , item)\n    setSelectedItem(item);\n    showModal()\n  }\n\n  const onFinish = (value, item) => {\n    handleOk()\n    onSubmitTag(value, item)\n  };\n  \n  const reloadModal = () => {\n   console.log('RELOAD MODAL LIST UI')\n   handleOk()\n  };\n\n    return (\n      <div className=\"demo-infinite-container\">\n        <InfiniteScroll\n          initialLoad={false}\n          pageStart={0}\n          useWindow={false}\n          loadMore={() => console.log('load more')}\n        >\n          <ModalUI \n          visible={visible} \n          handleCancel={handleCancel}\n          handleOk={handleOk}\n          reload={reload} \n          selectedItem={selectedItem}\n          reloadModal={reloadModal}\n          resetSelect={handleOk}\n          closeModal={handleOk()}\n          />\n          <List\n            dataSource={data}\n            renderItem={item => (\n              <div data-tag=\"test\" onClick={() => onTransactionClick(item)}>\n                <List.Item data={item} key={item.transaction_details.id}>\n                <List.Item.Meta\n                  title={<a><h2>{item.transaction_details.vendor}</h2></a>}\n                  \n                />\n                <List.Item.Meta\n                  title={<a><h2>{item.transaction_details.category}</h2></a>}\n                  description={item.transaction_details.tag}\n                />\n                <h2>{item.transaction_details.total} ₪</h2>\n             \n                \n              </List.Item>\n              </div>\n            )}\n          >\n          </List>\n        </InfiniteScroll>\n      </div>\n    );\n  \n}\n\nexport default ListUI ;"]},"metadata":{},"sourceType":"module"}