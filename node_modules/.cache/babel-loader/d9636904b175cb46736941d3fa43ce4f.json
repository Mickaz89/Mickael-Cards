{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchUserCategories } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst SelectUI = ({\n  onSelect,\n  selectedItem,\n  reload,\n  closeModal\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log('use effect select ', value);\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories').then(response => response.json()).then(data => {\n      setCategories(data);\n    }); // console.log(count)\n  }, [value]); // if you add count, only run if count changes.\n\n  let selectorOptions = categories.map(c => {\n    return {\n      label: c.name,\n      value: c.name\n    };\n  });\n\n  const onCreate = () => {\n    if (newCategory != null) {\n      fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"category\": newCategory\n        })\n      }).then(response => response.json()).then(data => {\n        setCategories(data);\n      });\n    }\n\n    console.log('click');\n    setCreate(false);\n  };\n\n  const onSubmitTag = value => {\n    setValue(value);\n    console.log('VALUE VALUE ', value);\n    console.log('SELECTED ITEM ', selectedItem);\n    fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"category\": value\n      })\n    }).then(response => response.json()).then(data => {\n      reload();\n      closeModal();\n      setValue(''); // setVisible(false)\n      // reloadModal(value);\n    });\n  };\n\n  return !categories.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      onChange: onSubmitTag,\n      options: selectorOptions,\n      className: \"select\",\n      onCreateOption: onCreate,\n      isLoading: loading,\n      isDisabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectUI, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SelectUI;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.open,\n    select: state.select\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectUI\");","map":{"version":3,"sources":["/Users/mickaelzana/Desktop/backstage/cards/demo-front/src/components/SelectUI.js"],"names":["React","useState","useEffect","fetchUserCategories","CreatableSelect","Button","Select","Option","SelectUI","onSelect","selectedItem","reload","closeModal","console","log","value","fetch","then","response","json","data","setCategories","selectorOptions","categories","map","c","label","name","onCreate","newCategory","method","headers","body","JSON","stringify","setCreate","onSubmitTag","setValue","transaction_details","uuid","length","loading","disabled","mapStateToProps","state","open","select","mapDispatchToProps","dispatch","connect"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchUserCategories } from '../actions';\nimport CreatableSelect from 'react-select/creatable';\nimport { Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst SelectUI = ({ onSelect, selectedItem, reload, closeModal }) => {\n\n  useEffect(() => {\n    console.log('use effect select ', value)\n    fetch('https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories')\n      .then(response => response.json())\n      .then(data => { setCategories(data) });\n\n    // console.log(count)\n  }, [value]) // if you add count, only run if count changes.\n\n  let selectorOptions = categories.map( c => {\n    return {\n      label:c.name,\n      value:c.name\n    }\n  })\n\n\n  const onCreate = () => {\n    if (newCategory != null) {\n        fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/categories`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"category\": newCategory })\n        })\n            .then(response => response.json())\n            .then(data => { setCategories(data) });\n    }\n    console.log('click')\n    setCreate(false);\n}\n\nconst onSubmitTag = (value) => {\n  setValue(value)\n  console.log('VALUE VALUE ', value)\n  console.log('SELECTED ITEM ', selectedItem)\n  fetch(`https://2eh1oighrk.execute-api.eu-west-1.amazonaws.com/dev/transactions/${selectedItem.transaction_details.uuid}`, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body:JSON.stringify({\"category\":value})\n  })\n  .then(response => response.json())\n  .then(data => { \n    reload() \n    closeModal()\n    setValue('')\n    // setVisible(false)\n    // reloadModal(value);\n    \n  });\n}\n\n\nreturn !categories.length \n? <h2>Loading</h2>\n:\n\n  <div>\n    <CreatableSelect\n            onChange={onSubmitTag}\n            options={selectorOptions}\n            className=\"select\"\n            onCreateOption={onCreate}\n            isLoading={loading}\n            isDisabled={disabled}\n          />\n  </div>\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories.open,\n    select: state.select\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUserCategories: () => dispatch(fetchUserCategories())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (SelectUI);"]},"metadata":{},"sourceType":"module"}